(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),p=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},b=function(e){var n=p(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=p(t),d=a,u=b["".concat(r,".").concat(d)]||b[d]||g[d]||i;return t?o.a.createElement(u,s(s({ref:n},c),{},{components:t})):o.a.createElement(u,s({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var c=2;c<i;c++)r[c]=t[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},82:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return p}));var a=t(3),o=t(7),i=(t(0),t(140)),r={id:"android_getting_started",title:"Android SDK of Diyalog Messaging Platform",sidebar_label:"How to configure Diyalog"},s={unversionedId:"android_getting_started",id:"android_getting_started",isDocsHomePage:!1,title:"Android SDK of Diyalog Messaging Platform",description:"Diyalog SDK is used for enabling messaging for your application. It is a multi-platform communication Messaging SDK for mobile and web. It is easy to integrate, save development cost and delight users with a stable, secure and customization messaging.",source:"@site/../docs/android_getting_started.md",slug:"/android_getting_started",permalink:"/docs/android_getting_started",version:"current",sidebar_label:"How to configure Diyalog",sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/getstarted"},next:{title:"Token Base Authentication",permalink:"/docs/android_tokenBaseAuth"}},l=[{value:"SDK Supports",id:"sdk-supports",children:[{value:"Features",id:"features",children:[]},{value:"Configuration Steps",id:"configuration-steps",children:[]}]},{value:"Integrate Firebase Messaging Push notification with Diyalog SDK",id:"integrate-firebase-messaging-push-notification-with-diyalog-sdk",children:[{value:"To create a Firebase project",id:"to-create-a-firebase-project",children:[]},{value:"Now that you have a project, you can add your Android app to it",id:"now-that-you-have-a-project-you-can-add-your-android-app-to-it",children:[]},{value:"Configuration Steps for android project",id:"configuration-steps-for-android-project",children:[]},{value:"Main application has firebase push notification",id:"main-application-has-firebase-push-notification",children:[]}]}],c={toc:l};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Diyalog SDK is used for enabling messaging for your application. It is a multi-platform communication Messaging SDK for mobile and web. It is easy to integrate, save development cost and delight users with a stable, secure and customization messaging."),Object(i.b)("h2",{id:"sdk-supports"},"SDK Supports"),Object(i.b)("p",null,"Diyalog SDK supported with Android 4.0.3(API level 15) & Above"),Object(i.b)("h3",{id:"features"},"Features"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"One-to-One Chat"),Object(i.b)("li",{parentName:"ul"},"Group Chat"),Object(i.b)("li",{parentName:"ul"},"Send text message"),Object(i.b)("li",{parentName:"ul"},"Send Media file (Audio, Video, Image)"),Object(i.b)("li",{parentName:"ul"},"Send Location"),Object(i.b)("li",{parentName:"ul"},"Share Contact"),Object(i.b)("li",{parentName:"ul"},"Audio Call")),Object(i.b)("h3",{id:"configuration-steps"},"Configuration Steps"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 1:")," Open your Project level build.gradle file and add below mentioned maven repository Url in build.grdle file."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"repositories {\n    jcenter()\n    mavenCentral()\n    ...\n    maven {\n        credentials {\n            username mavenUser\n            password mavenPassword\n        }\n        url 'http://mavenrepo.diyalog.im:18081/repository/maven-releases/'\n    }\n}\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"You will need credential for access our private repository. We will create a user for your company.\nPlease contact us to get mavenUser and mavenPassword for accessing repository.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 2:")," Open module level build.grdle file."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"a. set compile and target sdk version to 26 and above")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'    compileSdkVersion 26\n        defaultConfig {\n            --\n            minSdkVersion 15\n            targetSdkVersion 26\n            --\n        multiDexEnabled true\n        }\n        dexOptions {\n            javaMaxHeapSize "2g"\n        }\n        lintOptions {\n            abortOnError false\n        }\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"b. Add below mentioned dependency")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'implementation "im.diyalog:DiyalogEngine:0.0.1"\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 3:")," Open your project AndroidManifest.xml file and add below line of code inside application tag."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<meta-data\n    android:name="com.google.android.geo.API_KEY"\n    android:value="YOUR_API_KEY_HERE" />\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note")," : Replace ",Object(i.b)("strong",{parentName:"p"},"YOUR","_","API","_","KEY","_","HERE")," with your actual ",Object(i.b)("strong",{parentName:"p"},"Map API")," key which you will get from your google Api console\nTo get Map API key please check this"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Link :")," ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"https://developers.google.com/maps/documentation/android-api/signup"},"https://developers.google.com/maps/documentation/android-api/signup"))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 4:")," Create Application class and extend it with ",Object(i.b)("strong",{parentName:"p"},"DiyalogEngineApplication"),". And override ",Object(i.b)("strong",{parentName:"p"},"onConfigureDiyalogEngine()")," method.\nInside that method set below configure."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"a. Set Server End Point:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'DiyalogEngine.diyalogInstance().setEndpoints(new String[]{"YOUR_SERVER_URL_HERE"});\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"b. Set push ID:")," You need to set push ID to get push notification while application is closed."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().setPushId(YOUR_PUSH_ID_HERE);\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note")," : Replace ",Object(i.b)("strong",{parentName:"p"},"YOUR_PUSH_ID")," with your actual ",Object(i.b)("strong",{parentName:"p"},"Push ID")," key which you will get from your google console"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"c. Set Custom theme color:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'DiyalogStyle style = DiyalogEngine.diyalogInstance().style;\nstyle.setMainColor(Color.parseColor("#42f47a"));    \n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note:")," Diyalog SDK gives you many customization in the chat views. You can learn details about styling Diyalog in ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"doc_style"},"styling document."))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"d. Set Configurable following parameter :")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Set enable/disable audio call funcation"),Object(i.b)("li",{parentName:"ul"},"Set Application name"),Object(i.b)("li",{parentName:"ul"},"Invite URL"),Object(i.b)("li",{parentName:"ul"},"Help line number"),Object(i.b)("li",{parentName:"ul"},"Privacy policy text/URL"),Object(i.b)("li",{parentName:"ul"},"Terms and condition text/URL"),Object(i.b)("li",{parentName:"ul"},"Enable back button on Chat home screen.")),Object(i.b)("h4",{id:"full-code"},"Full Code:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'public class DiyalogApplication extends DiyalogEngineApplication {\n    @Override\n    public void onConfigureDiyalogEngine() {\n\n\n        // set here your end point\n        DiyalogEngine.diyalogInstance().setEndpoints(new String[]{"YOUR_SERVER_URL_HERE "});\n\n        // set here your end point\n                DiyalogEngine.diyalogInstance().setPushId(YOUR_PUSH_ID);\n\n        // set here you application theme color\n        DiyalogStyle style = DiyalogEngine.diyalogInstance().style;\n        style.setMainColor(Color.parseColor("#FFFF4081"));\n    }\n}\n')),Object(i.b)("p",null,"Do not forget to mention application class  in ",Object(i.b)("strong",{parentName:"p"},"AndroidManifest.xml")," inside ",Object(i.b)("strong",{parentName:"p"},"application")," tag using ",Object(i.b)("strong",{parentName:"p"},"android:name")," property."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 5:")," Now you have done with integration steps, Add below code for open chat screen from your application.  This will first check user authentication is completed or not, First time it will ask for login screen and after authentication complete it will open chat screen. Follow below steps"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"a.")," import messenger class ",Object(i.b)("strong",{parentName:"li"},"\u201cimport static im.diyalog.sdk.util.DiyalogEngineMessenger.messenger;\u201d")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"b.")," And code for start chat screen")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"btnStartChat.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n\n           if (messenger().getAuthState() != AuthState.LOGGED_IN) {\n\n            long lastActiveAuthID = messenger().getPreferences().getLongOfKey(Authentication.KEY_LAST_ACTIVEUSER_AUTH_ID);\n            if (lastActiveAuthID == 0)\n            {\n                Bundle authExtras = new Bundle();\n                authExtras.putInt(AuthActivity.SIGN_TYPE_KEY, AuthActivity.SIGN_TYPE_IN);\n                authExtras.putInt(AuthActivity.USER_TYPE_KEY, AuthActivity.USER_TYPE_PERSONAL);\n                DiyalogEngine.diyalogInstance().getActivityManager().startAuthActivity(MainActivity.this, authExtras);\n                finish();\n            }\n            else {\n\n                messenger().autoLogin(lastActiveAuthID);\n                messenger().switchAccount();\n                messenger().killAppStateActor();\n\n                DiyalogEngine.diyalogInstance().createDiyalog(getApplication());\n                DiyalogEngine.diyalogInstance().startMessagingApp(this);\n                finish();\n            }\n            return;\n\n\n        }\n\n        DiyalogEngine.diyalogInstance().startMessagingApp(this);\n        finish();\n    }\n});\n")),Object(i.b)("h2",{id:"integrate-firebase-messaging-push-notification-with-diyalog-sdk"},"Integrate Firebase Messaging Push notification with Diyalog SDK"),Object(i.b)("p",null,"In Diyalog SDK we have used firebase messaging platform for sending push notification. so we have used firebase services in sdk. Client need to configure as below into main application."),Object(i.b)("h3",{id:"to-create-a-firebase-project"},"To create a Firebase project"),Object(i.b)("p",null,"Client need to do Configur below Steps on firebase console"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 1:")," Create a Firebase project in the ",Object(i.b)("a",{parentName:"p",href:"https://console.firebase.google.com/"},"Firebase console"),", if you don't have any project then Click ",Object(i.b)("strong",{parentName:"p"},"Add project"),". If you already have an existing Google project associated with your mobile app, select it from the ",Object(i.b)("strong",{parentName:"p"},"Project name")," drop down menu. Otherwise, enter a project name to create a new project"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 2:")," Follow the remaining steps and click ",Object(i.b)("strong",{parentName:"p"},"Create project")," (or ",Object(i.b)("strong",{parentName:"p"},"Add Firebase")," if you have existing project) for your project. When the process completes, you'll be taken to the project overview."),Object(i.b)("h3",{id:"now-that-you-have-a-project-you-can-add-your-android-app-to-it"},"Now that you have a project, you can add your Android app to it"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 1:")," Click ",Object(i.b)("strong",{parentName:"p"},"Add Firebase to your Android app")," and follow the setup steps. If you're importing an existing Google project, this may happen automatically and you can just download the config file."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 2:")," When prompted, enter your app's package name. It's important to enter the package name your app is using; this can only be set when you add an app to your Firebase project."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 3:")," During the process, you'll download a ",Object(i.b)("strong",{parentName:"p"},"google-services.json")," file. You can download this file again at any time."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 4:")," After you add the initialization code, run your app to send verification to the Firebase console that you've successfully installed Firebase."),Object(i.b)("h3",{id:"configuration-steps-for-android-project"},"Configuration Steps for android project"),Object(i.b)("p",null,"Client need to perform a few basic steps to prepare your Android Studio project."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 1:")," Add ",Object(i.b)("strong",{parentName:"p"},"google-services.json")," file to application level project. (usually the app/google-services.json)"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 2:")," Add rules to your root-level build.gradle file, to include the google-services plugin and the Google's Maven repository."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"buildscript {\n    // ...\n    dependencies {\n        // ...\n        classpath 'com.google.gms:google-services:4.1.0' // google-services plugin\n    }\n}\n\nallprojects {\n    // ...\n    repositories {\n        // ...\n        google() // Google's Maven repository\n    }\n}\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 3:")," Then, in your module Gradle file (usually the app/build.gradle), add the apply plugin line at the bottom of the file to enable the Gradle plugin. You should also add the dependencies for the Firebase SDKs."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"apply plugin: 'com.android.application'\n\nandroid {\n  // ...\n}\n\ndependencies {\n  // ...\n    implementation 'com.google.firebase:firebase-messaging:12.0.1'\n    implementation 'com.google.firebase:firebase-core:12.0.1'\n\n}\n\n// ADD THIS AT THE BOTTOM\napply plugin: 'com.google.gms.google-services'\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 4:")," Now, client require to Pass sender ID/project ID to sdk from main application as below. client need to pass this pushID before Initialize() sdk. Client can register pushID into application class."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"}," DiyalogEngine.diyalogInstance().setPushId(214910017039L);\n")),Object(i.b)("p",null,"Done. Above steps are enough for generating push notification, if main application has no any FCM integration."),Object(i.b)("h3",{id:"main-application-has-firebase-push-notification"},"Main application has firebase push notification"),Object(i.b)("p",null,"If in main application has also firebase push notification then client need to follow additinal below steps to configure FCM push notification."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 1:")," Client need send device token to diyalog sdk from main application's FirebaseInstanceIdService class."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},' public class MyFirebaseInstanceIDService extends FirebaseInstanceIdService {\n    private static final String TAG = DiyalogFirebaseInstanceIDService.class.getSimpleName();\n\n    @Override\n    public void onTokenRefresh() {\n        super.onTokenRefresh();\n\n        String refreshedToken = FirebaseInstanceId.getInstance().getToken();\n        Log.d(TAG, "Token loaded Application:" + refreshedToken);\n\n        DiyalogEngine.diyalogInstance().storeDeviceToken(getApplicationContext(),refreshedToken);\n    }\n}\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 2:")," Client need to pass push payload data(RemoteMessage) to diyalog sdk from application's  FirebaseMessagingService."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"public class MyFirebaseMessagingService extends FirebaseMessagingService {\n    private static final String TAG = MyFirebaseMessagingService.class.getSimpleName();\n\n    @Override\n    public void onMessageReceived(RemoteMessage remoteMessage) {\n\n            //show notification of Diyalog sdk\n            DiyalogMessageService firebaseservice = new DiyalogMessageService(getApplication());\n            firebaseservice.processPushMessage(remoteMessage);      \n\n    }\n}\n\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Step 3:")," Open your project AndroidManifest.xml file and register firebase service as below line of code inside application tag."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'\n       \x3c!--FCM push notification--\x3e\n        <service android:name=".MyFirebaseInstanceIDService">\n            <intent-filter>\n                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />\n            </intent-filter>\n        </service>\n\n        <service android:name=".MyFirebaseMessagingService">\n            <intent-filter>\n                <action android:name="com.google.firebase.MESSAGING_EVENT" />\n            </intent-filter>\n        </service>\n\n')),Object(i.b)("p",null,"Done.  :)"))}p.isMDXComponent=!0}}]);