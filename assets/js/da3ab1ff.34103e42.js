(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{147:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return r})),t.d(a,"metadata",(function(){return c})),t.d(a,"toc",(function(){return i})),t.d(a,"default",(function(){return b}));var n=t(3),l=t(7),o=(t(0),t(164)),r={id:"iOS_style",title:"Style your SDK",sidebar_label:"Styling"},c={unversionedId:"iOS_style",id:"iOS_style",isDocsHomePage:!1,title:"Style your SDK",description:"Diyalog SDK provides custom Diyalog style to your application, using Diyalog style customer can create own styled screen.",source:"@site/../docs/iOS_style.md",slug:"/iOS_style",permalink:"/docs/iOS_style",version:"current",sidebar_label:"Styling",sidebar:"docs",previous:{title:"Configure your SDK",permalink:"/docs/ios_configuration"},next:{title:"Notifications",permalink:"/docs/ios_notification_configuration"}},i=[{value:"How to use custom style?",id:"how-to-use-custom-style",children:[]},{value:"More options?",id:"more-options",children:[{value:"Dark mode",id:"dark-mode",children:[]},{value:"Common View style",id:"common-view-style",children:[]},{value:"Diyalog TabBar Color",id:"diyalog-tabbar-color",children:[]},{value:"Colors in Diyalog Views",id:"colors-in-diyalog-views",children:[]},{value:"Navigation Bar",id:"navigation-bar",children:[]},{value:"Search Bars",id:"search-bars",children:[]},{value:"Chat Screen Colors Settings",id:"chat-screen-colors-settings",children:[]},{value:"Chat Actionsheet Settings",id:"chat-actionsheet-settings",children:[]},{value:"Cancel Button Colors",id:"cancel-button-colors",children:[]},{value:"Call Background Colors",id:"call-background-colors",children:[]},{value:"Online Help Views Colors",id:"online-help-views-colors",children:[]}]}],s={toc:i};function b(e){var a=e.components,t=Object(l.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Diyalog SDK provides custom Diyalog style to your application, using Diyalog style customer can create own styled screen."),Object(o.b)("h2",{id:"how-to-use-custom-style"},"How to use custom style?"),Object(o.b)("p",null,"First create object of DiyalogStyle class from your application class, and using that object you can access all property of DiyaLogStyle class."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Diyalog style is optional. If customer don't wants to use custom style then SDK will use default style")),Object(o.b)("h4",{id:"sample-code"},"Sample code:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"}," var style: DiyalogStyle { return DiyalogEngine.diyalogInstance().style };\n style.chatBgColor = .white\n")),Object(o.b)("h2",{id:"more-options"},"More options?"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Followings are styles parameters with the help of those parameters User can configure style within their Application:"),Object(o.b)("br",null)),Object(o.b)("h3",{id:"dark-mode"},"Dark mode"),Object(o.b)("p",null,"Set Main App in Dark Mode"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setisDarkApp(true)\n")),Object(o.b)("h3",{id:"common-view-style"},"Common View style"),Object(o.b)("p",null,"Change all bacground colors in Diyalog SDK screens."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setvcBgColor(UIColor(red: 19 / 255.0, green: 18.0 / 255.0, blue: 28.0 / 255.0, alpha: 1.0))\nDiyalogEngine.diyalogInstance().style.setvcBackyardColor(UIColor(red: 19 / 255.0, green: 18.0 / 255.0, blue: 28.0 / 255.0, alpha: 1.0))\nDiyalogEngine.diyalogInstance().style.setvcDefaultBackgroundColor(UIColor(red: 19 / 255.0, green: 18.0 / 255.0, blue: 28.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h3",{id:"diyalog-tabbar-color"},"Diyalog TabBar Color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"// Mesajlar ekran\u0131ndaki UITabBarItem arka plan\u0131n\u0131 ve  chat ekran\u0131 input alanlar\u0131n\u0131n arka planlar\u0131n\u0131 ayarlar\nDiyalogEngine.diyalogInstance().style.setvcPanelBgColor(UIColor(red: 19 / 255.0, green: 18.0 / 255.0, blue: 28.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h3",{id:"colors-in-diyalog-views"},"Colors in Diyalog Views"),Object(o.b)("h4",{id:"text-color-in-views"},"Text color in views"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setvcTextColor(.white)\n")),Object(o.b)("h4",{id:"tint-color-in-views"},"Tint color in views"),Object(o.b)("p",null,"This setting change all active text colors like:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Color of all buttons and action buttons"),Object(o.b)("li",{parentName:"ul"},"Selected UITabBarItem text color (if not set indiviudally)"),Object(o.b)("li",{parentName:"ul"},"All UITable title and text colors (if not set indiviudally)"),Object(o.b)("li",{parentName:"ul"},"Read Status tick color (if not set indiviudally)"),Object(o.b)("li",{parentName:"ul"},"User presense status info color (if not set indiviudally)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setvcTintColor(UIColor(rgb: 0x5085cb))\n")),Object(o.b)("h4",{id:"hint-color-in-views"},"Hint color in views"),Object(o.b)("p",null,"This setting change secondary and passive text colors in views like :"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"texts other than main texts (hint, label, date, pssive status informations.)"),Object(o.b)("li",{parentName:"ul"},"Not selected UITabBarItem text color (if not set indiviudally)"),Object(o.b)("li",{parentName:"ul"},"All UITable secondary elements text colors (if not set indiviudally)"),Object(o.b)("li",{parentName:"ul"},"Send, delivered Status tick color (if not set indiviudally)"),Object(o.b)("li",{parentName:"ul"},"Date text in Dailog lists (if not set indiviudally)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setvcHintColor(UIColor(red: 164 / 255.0, green: 164 / 255.0, blue: 164 / 255.0, alpha: 1))\n")),Object(o.b)("h4",{id:"separator-color"},"Separator color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setvcSeparatorColor(.white)\n")),Object(o.b)("h4",{id:"selected-items-color"},"Selected Items color"),Object(o.b)("p",null,"This setting set color for all selected items in views."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setvcSelectedColor(.darkGray)\n")),Object(o.b)("h4",{id:"switch-buttons-colors"},"Switch buttons colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setvcSwitchOff(UIColor(rgb: 0xe6e6e6))\nDiyalogEngine.diyalogInstance().style.setvcSwitchOn(UIColor(rgb: 0x4bd863))\n")),Object(o.b)("h3",{id:"navigation-bar"},"Navigation Bar"),Object(o.b)("h4",{id:"navigation-background-colors"},"Navigation Background colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setnavigationBgColor(UIColor(red: 19 / 255.0, green: 18.0 / 255.0, blue: 28.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"navigation-tint-colors"},"Navigation Tint colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setnavigationTintColor(.white)\n")),Object(o.b)("h4",{id:"navigation-bar-style"},"Navigation Bar Style"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setvcStatusBarStyle(.lightContent)\n")),Object(o.b)("h4",{id:"navigation-title-color"},"Navigation Title color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setnavigationTitleColor(.white)\n")),Object(o.b)("h3",{id:"search-bars"},"Search Bars"),Object(o.b)("h4",{id:"search-bar-background-color"},"Search bar background color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.searchBackgroundColor = UIColor(red: 19 / 255.0, green: 18.0 / 255.0, blue: 28.0 / 255.0, alpha: 1.0)\n")),Object(o.b)("h4",{id:"search-bar-input-field-background"},"Search bar input field background"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.searchFieldBgColor =  UIColor(red: 58.0 / 255.0, green: 65.0 / 255.0, blue: 85.0 / 255.0, alpha: 1.0)\n")),Object(o.b)("h4",{id:"search-bar-text-color"},"Search bar text color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.searchFieldTextColor = .white\n")),Object(o.b)("h4",{id:"search-bar-cancel-button-color"},"Search bar cancel button color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.searchCancelColor = UIColor(rgb: 0x5085cb)\n")),Object(o.b)("h3",{id:"chat-screen-colors-settings"},"Chat Screen Colors Settings"),Object(o.b)("h4",{id:"chat-screen-background-color"},"Chat screen background color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setChatBgColor(UIColor(red: 19 / 255.0, green: 18.0 / 255.0, blue: 28.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"received-text-message-bubble-background-color"},"Received text message bubble background color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatTextBubbleInColor(UIColor(red: 58.0 / 255.0, green: 65.0 / 255.0, blue: 85.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"received-text-message-bubble-border-color"},"Received text message bubble border color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatTextBubbleInBorderColor(UIColor(red: 58.0 / 255.0, green: 65.0 / 255.0, blue: 85.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"received-text-message-text-color"},"Received text message text color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.chatTextInColor(.white)\n")),Object(o.b)("h4",{id:"received-text-message-date-color"},"Received text message date color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatTextDateInColor(.lightGray)\n")),Object(o.b)("h4",{id:"received-media-message-bubble-background-color"},"Received media message bubble background color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatMediaBubbleInColor(UIColor(red: 32.0 / 255.0, green: 34.0 / 255.0, blue: 45.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"received-media-message-date-background-color"},"Received media message date background color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatMediaDateBgInColor(.blue)\n")),Object(o.b)("h4",{id:"received-media-message-date-text-color"},"Received media message date text color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatMediaDateInColor(.darkGray)\n")),Object(o.b)("h4",{id:"received-media-message-date-text-color-1"},"Received media message date text color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatMediaDateInColor(.darkGray)\n")),Object(o.b)("h4",{id:"sent-media-message-bubble-background-color"},"Sent media message bubble background color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatMediaBubbleOutColor(UIColor(red: 75.0 / 255.0, green: 146.0 / 255.0, blue: 226.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"sent-text-message-bubble-background-color"},"Sent text message bubble background color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatTextBubbleOutColor(UIColor(red: 75.0 / 255.0, green: 146.0 / 255.0, blue: 226.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"sent-text-message-bubble-border-color"},"Sent text message bubble border color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatTextBubbleOutBorderColor(UIColor(red: 75.0 / 255.0, green: 146.0 / 255.0, blue: 226.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"sent-text-message-text-color"},"Sent text message text color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.chatTextOutColor = UIColor.white\n")),Object(o.b)("h4",{id:"sent-text-message-date-color"},"Sent text message date color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatTextDateOutColor(UIColor(red: 242.0 / 255.0, green: 242.0 / 255.0, blue: 242.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"sent-media-message-date-color"},"Sent media message date color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatMediaDateOutColor(UIColor(red: 242.0 / 255.0, green: 242.0 / 255.0, blue: 242.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"new-messages-separator-background-color"},"New messages Separator background color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatUnreadBgColor(UIColor(red: 58.0 / 255.0, green: 65.0 / 255.0, blue: 85.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"service-messages-bubble-color"},"Service Messages bubble color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setchatServiceBubbleColor(UIColor(red: 58.0 / 255.0, green: 65.0 / 255.0, blue: 85.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h4",{id:"voice-message-slider-color"},"Voice message Slider Color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.audioCellSliderLeftInColor = .lightGray\nDiyalogEngine.diyalogInstance().style.audioCellSliderRightInColor = .darkGray\nDiyalogEngine.diyalogInstance().style.audioCellSliderLeftOutColor = .white\nDiyalogEngine.diyalogInstance().style.audioCellSliderRightOutColor = .darkGray\n")),Object(o.b)("h4",{id:"message-status-tick-colors"},"Message Status tick colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.chatStatusRead =  UIColor(red: 127.0 / 255.0, green: 253.0 / 255.0, blue: 242.0 / 255.0, alpha: 1.0)\nDiyalogEngine.diyalogInstance().style.chatStatusSent = UIColor.white\nDiyalogEngine.diyalogInstance().style.chatStatusReceived = UIColor.white\n")),Object(o.b)("h3",{id:"chat-actionsheet-settings"},"Chat Actionsheet Settings"),Object(o.b)("h4",{id:"background-color"},"Background color"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setActionSheetBackgroundColor(UIColor.white)\n")),Object(o.b)("h4",{id:"tint-colors"},"Tint Colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setActionSheetButtonTintColor(UIColor(red: 5.0 / 255.0, green: 124.0 / 255.0, blue: 226.0 / 255.0, alpha: 1))\nDiyalogEngine.diyalogInstance().style.setActionSheetBackgroundColor(UIColor.clear)\n")),Object(o.b)("h4",{id:"camera-button-colors"},"Camera Button Colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.actionSheetButtonCameraTintColor = UIColor(red: 5.0 / 255.0, green: 124.0 / 255.0, blue: 226.0 / 255.0, alpha: 1)\nDiyalogEngine.diyalogInstance().style.actionSheetButtonCameraBackgroundColor = UIColor.clear\n")),Object(o.b)("h4",{id:"lirary-button-colors"},"Lirary Button Colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.actionSheetButtonLibraryTintColor = UIColor(red: 5.0 / 255.0, green: 124.0 / 255.0, blue: 226.0 / 255.0, alpha: 1)\nDiyalogEngine.diyalogInstance().style.actionSheetButtonLibraryBackgroundColor = UIColor.clear\n")),Object(o.b)("h4",{id:"location-button-colors"},"Location Button Colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.actionSheetButtonLocationTintColor = UIColor(red: 5.0 / 255.0, green: 124.0 / 255.0, blue: 226.0 / 255.0, alpha: 1)\nDiyalogEngine.diyalogInstance().style.actionSheetButtonLocationBackgroundColor = UIColor.clear\n")),Object(o.b)("h4",{id:"contact-button-colors"},"Contact Button Colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.actionSheetButtonContactTintColor = UIColor(red: 5.0 / 255.0, green: 124.0 / 255.0, blue: 226.0 / 255.0, alpha: 1)\nDiyalogEngine.diyalogInstance().style.actionSheetButtonContactBackgroundColor = UIColor.clear\n")),Object(o.b)("h3",{id:"cancel-button-colors"},"Cancel Button Colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.actionSheetButtonCancelTintColor = UIColor(red: 5.0 / 255.0, green: 124.0 / 255.0, blue: 226.0 / 255.0, alpha: 1)\nDiyalogEngine.diyalogInstance().style.actionSheetButtonCancelBackgroundColor = UIColor.red\n")),Object(o.b)("h4",{id:"action-sheet-separator-colors"},"Action Sheet Separator Colors"),Object(o.b)("p",null,"Set all separator colors with"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setActionSheetSeparatorColor(UIColor(red: 230.0 / 255.0, green: 230.0 / 255.0, blue: 230.0 / 255.0, alpha: 0.6))\n")),Object(o.b)("p",null,"or you can set each action sheet separator colors individually"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.actionSheetSeparator1Color = UIColor(red: 223.9 / 255.0, green: 223.9 / 255.0, blue: 223.9 / 255.0, alpha: 0.6)\nDiyalogEngine.diyalogInstance().style.actionSheetSeparator2Color = UIColor(red: 230.0 / 255.0, green: 230.0 / 255.0, blue: 230.0 / 255.0, alpha: 0.6)\nDiyalogEngine.diyalogInstance().style.actionSheetSeparator3Color = UIColor(red: 230.0 / 255.0, green: 230.0 / 255.0, blue: 230.0 / 255.0, alpha: 0.6)\nDiyalogEngine.diyalogInstance().style.actionSheetSeparator4Color = UIColor(red: 230.0 / 255.0, green: 230.0 / 255.0, blue: 230.0 / 255.0, alpha: 0.6)\nDiyalogEngine.diyalogInstance().style.actionSheetSeparator4Color = UIColor(red: 230.0 / 255.0, green: 230.0 / 255.0, blue: 230.0 / 255.0, alpha: 0.6)\nDiyalogEngine.diyalogInstance().style.actionSheetSeparator5Color = UIColor(red: 230.0 / 255.0, green: 230.0 / 255.0, blue: 230.0 / 255.0, alpha: 0.6)\nDiyalogEngine.diyalogInstance().style.actionSheetSeparator6Color = UIColor(red: 230.0 / 255.0, green: 230.0 / 255.0, blue: 230.0 / 255.0, alpha: 0.6)\n")),Object(o.b)("h3",{id:"call-background-colors"},"Call Background Colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"DiyalogEngine.diyalogInstance().style.setCallBackgroundColor(UIColor(red: 7.0 / 255.0, green: 78 / 255.0, blue: 154.0 / 255.0, alpha: 1.0))\n")),Object(o.b)("h3",{id:"online-help-views-colors"},"Online Help Views Colors"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'DiyalogEngine.diyalogInstance().style.setOnlineHelpNavigationBackgroundColor(UIColor(red: 18, green: 18, blue: 18))\nDiyalogEngine.diyalogInstance().style.setOnlineHelpBackgroundColor(UIColor(red: 18, green: 18, blue: 18))\nDiyalogEngine.diyalogInstance().style.setOnlineHelpNavigationBarTitleColor(.white)\nDiyalogEngine.diyalogInstance().style.setOnlineHelpTextColor(.white)\n\nDiyalogEngine.diyalogInstance().style.setOnlineHelpToolBarTitleImage(UIImage.bundled("toolbar_icon")!) // set toolbar icon, if you want\nDiyalogEngine.diyalogInstance().style.setShowOnlineHelpAvatarImage(false) // disable agent avatar\nDiyalogEngine.diyalogInstance().style.setOnlineHelpCustomAgentAvatarImg(UIImage.bundled("agent_icon")!) // set agent avatar image\nDiyalogEngine.diyalogInstance().style.setOnlineHelpBackIcon(UIImage.bundled("back_icon")!) // set back icon in chat screen, if you want\n')))}b.isMDXComponent=!0},164:function(e,a,t){"use strict";t.d(a,"a",(function(){return g})),t.d(a,"b",(function(){return y}));var n=t(0),l=t.n(n);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=l.a.createContext({}),b=function(e){var a=l.a.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},g=function(e){var a=b(e.components);return l.a.createElement(s.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return l.a.createElement(l.a.Fragment,{},a)}},u=l.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,r=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),g=b(t),u=n,y=g["".concat(r,".").concat(u)]||g[u]||d[u]||o;return t?l.a.createElement(y,c(c({ref:a},s),{},{components:t})):l.a.createElement(y,c({ref:a},s))}));function y(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,r=new Array(o);r[0]=u;var c={};for(var i in a)hasOwnProperty.call(a,i)&&(c[i]=a[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,r[1]=c;for(var s=2;s<o;s++)r[s]=t[s];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);