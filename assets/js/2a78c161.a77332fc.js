(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{145:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return b}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),p=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},g=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),g=a,b=d["".concat(i,".").concat(g)]||d[g]||u[g]||r;return t?o.a.createElement(b,l(l({ref:n},c),{},{components:t})):o.a.createElement(b,l({ref:n},c))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=t[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},146:function(e,n,t){"use strict";t.d(n,"b",(function(){return r})),t.d(n,"a",(function(){return i}));var a=t(16),o=t(147);function r(){const{siteConfig:{baseUrl:e="/",url:n}={}}=Object(a.default)();return{withBaseUrl:(t,a)=>function(e,n,t,{forcePrependBaseUrl:a=!1,absolute:r=!1}={}){if(!t)return t;if(t.startsWith("#"))return t;if(Object(o.b)(t))return t;if(a)return n+t;const i=t.startsWith(n)?t:n+t.replace(/^\//,"");return r?e+i:i}(n,e,t,a)}}function i(e,n={}){const{withBaseUrl:t}=r();return t(e,n)}},147:function(e,n,t){"use strict";function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!a(e)}t.d(n,"b",(function(){return a})),t.d(n,"a",(function(){return o}))},83:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"Highlight",(function(){return s})),t.d(n,"HighlightWithBlack",(function(){return c})),t.d(n,"HighlightWithRed",(function(){return p})),t.d(n,"ColoredText",(function(){return d})),t.d(n,"CenteredText",(function(){return u})),t.d(n,"GreenColoredText",(function(){return g})),t.d(n,"BlueColoredText",(function(){return b})),t.d(n,"toc",(function(){return y})),t.d(n,"default",(function(){return O}));var a=t(3),o=t(7),r=(t(0),t(145)),i=(t(146),{id:"android_getting_started",title:"How to use Diyalog Android SDK",sidebar_label:"How to use Diyalog"}),l={unversionedId:"android_getting_started",id:"android_getting_started",isDocsHomePage:!1,title:"How to use Diyalog Android SDK",description:"<span",source:"@site/../docs/android_getting_started.md",slug:"/android_getting_started",permalink:"/docs/android_getting_started",version:"current",sidebar_label:"How to use Diyalog",sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/getstarted"},next:{title:"Configure your SDK",permalink:"/docs/android_configuration"}},s=function(e){var n=e.children,t=e.color;return Object(r.b)("span",{style:{backgroundColor:t,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},c=function(e){var n=e.children,t=e.color;return Object(r.b)("span",{style:{backgroundColor:t,borderRadius:"2px",padding:"0.2rem"}},n)},p=function(e){var n=e.children,t=e.color;return Object(r.b)("span",{style:{color:"#d60b0b",backgroundColor:t,borderRadius:"2px",padding:"0.2rem"}},n)},d=function(e){var n=e.children,t=e.color;return Object(r.b)("span",{style:{color:t}},n)},u=function(e){var n=e.children;return Object(r.b)("span",{style:{align:"center"}},n)},g=function(e){var n=e.children;return Object(r.b)("span",{style:{color:"#42b72a"}},n)},b=function(e){var n=e.children;return Object(r.b)("span",{style:{color:"#1877F2"}},n)},y=[{value:"SDK Supports",id:"sdk-supports",children:[]},{value:"Integration Steps",id:"integration-steps",children:[]}],m={Highlight:s,HighlightWithBlack:c,HighlightWithRed:p,ColoredText:d,CenteredText:u,GreenColoredText:g,BlueColoredText:b,toc:y};function O(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},m,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Diyalog SDK is used for enabling messaging for your application. It is a multi-platform communication Messaging SDK for mobile and web. It is easy to integrate, save development cost and delight users with a stable, secure and customization messaging."),Object(r.b)("h2",{id:"sdk-supports"},"SDK Supports"),Object(r.b)("p",null,"Diyalog SDK supported with Android 4.0.3(API level 15) & Above"),Object(r.b)("h2",{id:"integration-steps"},"Integration Steps"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Step 1:")," Open your Project level build.gradle file and add below mentioned maven repository Url in build.gradle file.  "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"repositories {\n    jcenter()\n    mavenCentral()\n    ...\n    maven {\n        credentials {\n            username mavenUser\n            password mavenPassword\n        }\n        url 'https://mavenrepo.diyalog.im/repository/maven-releases/'\n    }\n}\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note:")," You will need credential for access our private repository. We will create a user for your company. Please contact us to get mavenUser and mavenPassword for accessing repository.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Step 2:")," Open module level build.gradle file."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"a.")," Set compile and target sdk version to 26 and above"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'    compileSdkVersion 26\n        defaultConfig {\n            --\n            minSdkVersion 15\n            targetSdkVersion 26\n            --\n        multiDexEnabled true\n        }\n        dexOptions {\n            javaMaxHeapSize "2g"\n        }\n        lintOptions {\n            abortOnError false\n        }\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"b.")," Add Diyalog Android dependency to your dependency section of module build.gradle file."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'implementation "im.diyalog:DiyalogEngine:version-no"\n')),Object(r.b)("p",{parentName:"li"},"  if you are using 3.* version of com.squareup.okhttp3 in your project. This cause an library conflict. Because DiyalogSDk is using 4.7.2 version of com.squareup.okhttp3. For solving this, you should add DiyalogEngine dependency as follows."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'implementation \'im.diyalog:DiyalogEngine:version-no\u2019{\n  transitive true\n  exclude group: "com.squareup.okhttp3"\n}\n')),Object(r.b)("p",{parentName:"li"},"  Diyalog SDK also has feature push notification and sending location between peers. After 2020, Google Services not support apis of them for Huawei devices. we separated map and notification integration regarding as stores due to this. Therefore, you should add following Diyalog dependency based on Google and Huawei application store.  "),Object(r.b)("p",{parentName:"li"},"  For application that deploy to Google App Store :"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'implementation "im.diyalog:DiyalogGoogleExtension:version-no"\n')),Object(r.b)("p",{parentName:"li"},"  For application that deploy to Huawei App Gallery :"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'implementation "im.diyalog:DiyalogHuaweiExtension:version-no"\n')),Object(r.b)("p",{parentName:"li"},"  ",Object(r.b)("strong",{parentName:"p"},"*version-no")," should be the current stable version of Diyalog Android SDK."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Step 3:")," If you will use sending and receiving location messages, you should do this step. Otherwise you can skip this step. "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"For Google Android Store :"),Object(r.b)("br",{parentName:"p"}),"\n","Open your project AndroidManifest.xml file and add below line of code inside application tag.  "),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'<meta-data\n    android:name="com.google.android.geo.API_KEY"\n    android:value="YOUR_API_KEY_HERE" />\n')),Object(r.b)("blockquote",{parentName:"li"},Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note")," : Replace ",Object(r.b)(p,{mdxType:"HighlightWithRed"},"YOUR","_","API","_","KEY","_","HERE")," with your actual ",Object(r.b)("strong",{parentName:"p"},"Map API")," key which you will get from your google Api console\nTo get Map API key please check ",Object(r.b)("a",{parentName:"p",href:"https://developers.google.com/maps/documentation/android-api/signup"},"Maps SDK for Android document.")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"For Huawei devices that use Huawei App Gallery :"),Object(r.b)("br",{parentName:"p"}),"\n","Add agconnect-services.json file that created with map api key with ypu app account in Huawei Mobile Services to your project."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Step 4:")," After all dependencies added to your project, you should initialise Diyalog. For doing this you have two choices."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"By calling initiliasation codes",Object(r.b)("br",{parentName:"li"}),"You should call configuration setting methods and initialise methods of Diyalog SDK in your Application class or another class that you want to start DiyalogSDK. If you want to start Diyalog your other class instead fo Application class, you must be care that calling these initialisation methods only once in your system. Therefore, we are recomending that initiliase Diyalog in your Application class.",Object(r.b)("br",{parentName:"li"}),"")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'    public class Application extends android.app.Application {\n\n        @Override\n        protected void attachBaseContext(Context base) {\n            super.attachBaseContext(base);\n            MultiDex.install(this);\n        }\n\n        @Override\n        public void onCreate() {\n            super.onCreate();\n\n            //Your app code\n            ...\n\n            // Create and initialise Diyalog\n            //Set required configuration\n            DiyalogEngine.diyalogInstance().setAppName("DemoApp");\n            DiyalogEngine.diyalogInstance().setApiAppId(<YOUR_APP_ID>);\n            DiyalogEngine.diyalogInstance().setApiAppKey("<YOUR_APP_KEY>");\n            DiyalogEngine.diyalogInstance().setEndpoints(new String[]{"wss://<YOUR_DIYALOG_SERVER_ENDPOINT_ADDRESS>"});\n\n            String[] trustedKeys = new String[]{\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_1",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_2",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_3",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_4",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_5",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_6"\n            };\n            DiyalogEngine.diyalogInstance().setTrustedKeys(trustedKeys);\n\n            // Create Diyalog\n            AndroidContext.setContext(getApplicationContext());\n            DiyalogEngine.diyalogInstance().createDiyalog(this);\n            DiyalogEngine.diyalogInstance().waitForReady();\n\n            // set here you application theme color\n            DiyalogStyle style = DiyalogEngine.diyalogInstance().style;\n            style.setMainColor(Color.parseColor("#FFFF4081"));\n\n        }\n    }\n')),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"By extending Diyalog SDK DiyalogEngineApplication class.",Object(r.b)("br",{parentName:"li"}),"Create Application class and extend it with ",Object(r.b)("strong",{parentName:"li"},"DiyalogEngineApplication"),". And override ",Object(r.b)("strong",{parentName:"li"},"onConfigureDiyalogEngine()")," method.\nInside that method set below configure. There is no need calling any createDiyalog function if extend ",Object(r.b)("strong",{parentName:"li"},"DiyalogEngineApplication")," class of SDK. Constructor of this class will handle setting configuration and creating Diyalog.  ")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'    public class DiyalogApplication extends DiyalogEngineApplication {\n        \n        @Override\n        public void onConfigureDiyalogEngine() {\n            \n            DiyalogEngine.diyalogInstance().setAppName("DemoApp");\n            DiyalogEngine.diyalogInstance().setApiAppId(<YOUR_APP_ID>);\n            DiyalogEngine.diyalogInstance().setApiAppKey("<YOUR_APP_KEY>");\n            DiyalogEngine.diyalogInstance().setEndpoints(new String[]{"wss://<YOUR_DIYALOG_SERVER_ENDPOINT_ADDRESS>"});\n\n            String[] trustedKeys = new String[]{\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_1",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_2",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_3",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_4",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_5",\n                "<YOUR_DIYALOG_ENVIRONMENT_PUBLIC_KEY_6"\n            };\n            DiyalogEngine.diyalogInstance().setTrustedKeys(trustedKeys);\n\n            // set here you application theme color\n            DiyalogStyle style = DiyalogEngine.diyalogInstance().style;\n            style.setMainColor(Color.parseColor("#FFFF4081"));\n        }\n    }\n')),Object(r.b)("p",null,"Now you are ready to use Diyalog SDK in your application.  You should read the next section about configuration parameters.\nDiyalog SDK gives you many customization in the chat views. You can learn details about styling Diyalog in ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",{parentName:"strong",href:"/docs/android_style"},"styling document."))))}O.isMDXComponent=!0}}]);