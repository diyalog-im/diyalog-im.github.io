(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{110:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),o=(n(0),n(162)),l={id:"android_tokenBaseAuth",title:"Token Base Authentication",sidebar_label:"Token Base Authentication"},i={unversionedId:"android_tokenBaseAuth",id:"android_tokenBaseAuth",isDocsHomePage:!1,title:"Token Base Authentication",description:"There is a token-based authentication mechanism that allows a user who is logged in to your mobile application to securely activate the device they are logged in to in the Diyalog system. A user who has activated dialogue can now chat, make voice or video calls, and receive messages sent from your backoffice applications via that device.",source:"@site/../docs/android_tokenBaseAuth.md",slug:"/android_tokenBaseAuth",permalink:"/docs/android_tokenBaseAuth",version:"current",sidebar_label:"Token Base Authentication",sidebar:"docs",previous:{title:"Starting Online Help",permalink:"/docs/android_online_help"},next:{title:"How to use Diyalog IOS SDK",permalink:"/docs/iOS_getting_started"}},s=[{value:"Domain Customer User",id:"domain-customer-user",children:[]},{value:"Domain Staff User",id:"domain-staff-user",children:[]},{value:"Get Active sessions",id:"get-active-sessions",children:[]},{value:"Messaging from specific User",id:"messaging-from-specific-user",children:[]},{value:"Delete session of user",id:"delete-session-of-user",children:[]},{value:"Get total unread count into main application.",id:"get-total-unread-count-into-main-application",children:[{value:"TokenAuthResponse",id:"tokenauthresponse",children:[]},{value:"TokenAuthError",id:"tokenautherror",children:[]}]}],c={toc:s};function b(e){var t=e.components,l=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,l,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"There is a token-based authentication mechanism that allows a user who is logged in to your mobile application to securely activate the device they are logged in to in the Diyalog system. A user who has activated dialogue can now chat, make voice or video calls, and receive messages sent from your backoffice applications via that device."),Object(o.b)("p",null,"In order to perform token-based authentication for Dialog activation from your mobile application, you must first configure the Diyalog SDK and create the Dialog Instance once your application is opened. You can find details for these processes in the ",Object(o.b)("strong",{parentName:"p"},"How \u200b\u200bto use Dialog"),", ",Object(o.b)("strong",{parentName:"p"},"Configuration")," and ",Object(o.b)("strong",{parentName:"p"},"Styling")," documents."),Object(o.b)("h2",{id:"domain-customer-user"},"Domain Customer User"),Object(o.b)("p",null,"The general flow of the token-based authentication mechanism of the Diyalog system for customers is tried to be shown in the following diagram."),Object(o.b)("p",null,Object(o.b)("img",{src:n(198).default})),Object(o.b)("p",null,"As explained in the flow above, in order to initiate Diyalog activation on that device for the user who is logged in to your mobile application, you are expected to generate a random token specific to Diyalog in your backend server. Your mobile application should receive this token and give it to the methods detailed below to DiyalogSDK. DiyalogSDK receives this token and sends it to its own server, and the Diyalog server will validate this token by calling your ",Object(o.b)("a",{parentName:"p",href:"diyalog-required-api-authentication-services#customer-token-verification-service-api"},"checkauthtoken")," API that you will provide, and will activate the user on that device after verification."),Object(o.b)("p",null,"You can activate Diyalog in your mobile application with two different methods. The first of these is to use the method we call the background method, and the other is to use the method we call the frontend method. The background method activates Diyalog in the background, gives you the result, and then closes the Diyalog server connections. The other method activates the user via Diyalog and keeps the connections to server open. This second method should be used if Diyalog screens will be opened directly after the user activation. If Dialog screens will not be opened directly to the user and the user will use Diyalog screens later when desired, the background method should be used."),Object(o.b)("p",null,"Regardless of which method is used, after your user logs into your application on your system, you are expected to generate a token to authenticate your user on your system and give this token to the method you call so that Diyalog can authenticate your user via your servers. Diyalog will receive this token and send it to its own server, and Diyalog server will send this token to the API detailed in the ",Object(o.b)("a",{parentName:"p",href:"diyalog-required-api-authentication-services#customer-token-verification-service-api"},"checkauthtoken")," document below and expected to be implemented on your servers to perform the verification. After verification, the user is created in the Diyalog system and the user is bound with the device."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"a. Background method")),Object(o.b)("p",null,"With this method, your user will be registered securely to the Diyalog system. After registration, a session will be created in the SDK then the SDK will close its connections with the server."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Method Definition :")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"public void startTokenAuthInBackground(\n    Activity context, \n    String dlgToken, \n    String deviceId,\n    String customerId,\n    String customerName,\n    Long customerPhone,\n    String customerEmail,\n    TokenAuthResponse tokenAuthResponse)\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Usage :")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},'DiyalogEngine.diyalogInstance().startTokenAuthInBackground(\n                        yourActivity.this, \n                        "<Token generated on your server>",\n                        "<device id corralated with token>", \n                        "<customerId>",\n                        "<Full name of the customer>", \n                        "<Optional - Customer phone number>",\n                        "<Optional - Customer email address>", \n                        new TokenAuthResponse() {\n                            @Override\n                            public void success() {\n                                Log.d("Auth In Bakground", "==>> Success");\n                            }\n\n                            @Override\n                            public void failure(TokenAuthError tokenAuthError) {\n                                Log.e("Auth In Bakground", "==>> Error Message: " + tokenAuthError.getErrorMsg());\n                                Log.e("Auth In Bakground", "==>> Error Code: "+ getString(im.diyalog.sdk.R.string.auth_error_technical_reason)+" "+ tokenAuthError.getErrorCode());\n                            }\n                        });\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Parameters :")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Parameter Name"),Object(o.b)("th",{parentName:"tr",align:null},"Type"),Object(o.b)("th",{parentName:"tr",align:null},"Description"),Object(o.b)("th",{parentName:"tr",align:null},"Mandatory"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"context"),Object(o.b)("td",{parentName:"tr",align:null},"Activity"),Object(o.b)("td",{parentName:"tr",align:null},"The android activity object from which you call the method"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"dlgToken"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Token generated for logged in user for Diyalog auth"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"deviceID"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Unique device id corralated with token"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"customerID"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Customer Id of the user"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"customerName"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Name of the user"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"customerPhone"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Phone number  of the user"),Object(o.b)("td",{parentName:"tr",align:null},"No")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"customerEmail"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Email address of the user"),Object(o.b)("td",{parentName:"tr",align:null},"No")))),Object(o.b)("p",null,"The method runs asynchronously and its result is returned in the completion/callback function result in ",Object(o.b)("a",{parentName:"p",href:"android_tokenBaseAuth#tokenauthresponse"},"TokenAuthResponse"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"b. Foreground method")),Object(o.b)("p",null,"This method is different from the background method, if Diyalog messaging screens will be opened and used immediately after Diyalog activation, you can use this method. This method was added to prevent delays during the establishment of the Diyalog server connection with the client."),Object(o.b)("p",null,"If Diyalog screens will not be opened after activation, you should not use this method. Because a connection will remain open in the Diyalog system unnecessarily."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Method Definition :")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"public void startTokenAuthForOpenDlg(\n    Activity context, \n    String dlgToken, \n    String deviceId,\n    String customerId,\n    String customerName,\n    Long customerPhone,\n    String customerEmail,\n    TokenAuthResponse tokenAuthResponse)\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Usage :")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},'DiyalogEngine.diyalogInstance().startTokenAuthForOpenDlg(\n    dlgToken: "<Token generated on your server>", \n    deviceID: "<device id corralated with token>", \n    customerID: "<customerId>", \n    customerName: "<Full name of the customer>", \n    customerPhone: "<Optional - Customer phone number>", \n    customerEmail: "<Optional - Customer email address>") { (success, errorMessage) in\n\n        if(success)\n        {\n            print("Success")\n        }else{\n            //print("there is an error")\n            print("there is an error \\(String(describing: errorMessage?.errorCode))")\n        }\n\n    }\nDiyalogEngine.diyalogInstance().startTokenAuthForOpenDlg(\n        yourActivity.this, \n        "<Token generated on your server>",\n        "<device id corralated with token>", \n        "<customerId>",\n        "<Full name of the customer>", \n        "<Optional - Customer phone number>",\n        "<Optional - Customer email address>", \n        new TokenAuthResponse() {\n            @Override\n            public void success() {\n                Log.d("Auth In Bakground", "==>> Success");\n            }\n\n            @Override\n            public void failure(TokenAuthError tokenAuthError) {\n                Log.e("Auth In Bakground", "==>> Error Message: " + tokenAuthError.getErrorMsg());\n                Log.e("Auth In Bakground", "==>> Error Code: "+ getString(im.diyalog.sdk.R.string.auth_error_technical_reason)+" "+ tokenAuthError.getErrorCode());\n            }\n        });\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Parameters :")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Parameter Name"),Object(o.b)("th",{parentName:"tr",align:null},"Type"),Object(o.b)("th",{parentName:"tr",align:null},"Description"),Object(o.b)("th",{parentName:"tr",align:null},"Mandatory"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"context"),Object(o.b)("td",{parentName:"tr",align:null},"Activity"),Object(o.b)("td",{parentName:"tr",align:null},"The android activity object from which you call the method"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"dlgToken"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Token generated for logged in user for Diyalog auth"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"deviceID"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Unique device id corralated with token"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"customerID"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Customer Id of the user"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"customerName"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Name of the user"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"customerPhone"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Phone number  of the user"),Object(o.b)("td",{parentName:"tr",align:null},"No")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"customerEmail"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"Email address of the user"),Object(o.b)("td",{parentName:"tr",align:null},"No")))),Object(o.b)("p",null,"The method runs asynchronously and its result is returned in the completion/callback function result."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"result :")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Parameter Name"),Object(o.b)("th",{parentName:"tr",align:null},"Type"),Object(o.b)("th",{parentName:"tr",align:null},"Description"),Object(o.b)("th",{parentName:"tr",align:null},"Values"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"success"),Object(o.b)("td",{parentName:"tr",align:null},"Boolean"),Object(o.b)("td",{parentName:"tr",align:null},"It returns activation success or nor."),Object(o.b)("td",{parentName:"tr",align:null},"true : Success false: failed")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"error"),Object(o.b)("td",{parentName:"tr",align:null},"TokenAuthError"),Object(o.b)("td",{parentName:"tr",align:null},"Failure detail if activation is failed."),Object(o.b)("td",{parentName:"tr",align:null},"Instance of ",Object(o.b)("a",{parentName:"td",href:"iOS_TokenBaseAuthentication#tokenautherror"},"TokenAuthError"))))),Object(o.b)("h2",{id:"domain-staff-user"},"Domain Staff User"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"a. Foreground method")),Object(o.b)("p",null,"For staff user registration client need to call below method with necessary information. After successfully register on server it will create session in Diyalog SDK and can start messaging. Using below method if user already created session in Diyalog SDK, then it will directly open that session and user can start messaging."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"   DiyalogEngine.diyalogInstance().startDomainUserTokenAuth( context,  dlgToken,   sessionId,\n                                         userId,\n                                         userName,\n                                         userPhone,\n                                         userEmail);\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"context")," - Activity context"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"dlgToken")," - Main application server will return Diyalog Token when user will login into main application"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"sessionId")," \u2013 Staff user's sessionId"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"userId")," - Staff user's UserID"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"UserName")," - Staff user's UserName"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"userPhone"),"  - Staff user's PhoneNumber(Optional)"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"userEmail")," - Staff user's EmailID (Optional)"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"b. Background method"),"\nWhen staff user will call background method then it will be register on server and after successfully register, it will create session into sdk.\nAnd when user will click on Diyalog chat icon from main application to open sdk, it will directly open that session. user does not wait for register.\nAnd In background method if there is any failure then it will pass error message into failure callback."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},' DiyalogEngine.diyalogInstance().startDomainUserTokenAuthInBackground(context,  dlgToken,   sessionId, userId,\n                                         userName, userPhone, userEmail, new TokenAuthResponse() {\n                    @Override\n                    public void success() {\n                        Log.e("Auth In Bakground","==>> Success ");\n                       \n                    }\n\n                    @Override\n                    public void failure(TokenAuthError tokenAuthError) {\n                        Log.e("Auth In Bakground", "==>> Error Message: " + tokenAuthError.getErrorMsg());\n                        Log.e("Auth In Bakground", "==>> Error Code: "+  tokenAuthError.getErrorCode());\n                    }\n                }) ;\n')),Object(o.b)("h2",{id:"get-active-sessions"},"Get Active sessions"),Object(o.b)("p",null,"User can get all sessions list those already registered in diyalog SDK. This method will be use for both Domain customer user and staff user."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"ArrayList<AccountVo> sessionList = DiyalogEngine.diyalogInstance().getActiveSessions();\n")),Object(o.b)("p",null,"This method will return list of saved session from sdk.\nIt will contain userInfo as below:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"ApplicationUserID"),Object(o.b)("li",{parentName:"ul"},"AuthID"),Object(o.b)("li",{parentName:"ul"},"UserName"),Object(o.b)("li",{parentName:"ul"},"User Image."),Object(o.b)("li",{parentName:"ul"},"User is active or not"),Object(o.b)("li",{parentName:"ul"},"Unread message count")),Object(o.b)("h2",{id:"messaging-from-specific-user"},"Messaging from specific User"),Object(o.b)("p",null,"User can start messaging from specific user. If session already saved into Diyalog SDK then user can start messaging with thier UserID. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"DiyalogEngine.diyalogInstance().startMessagingWithUserId(context,customerId);\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"context")," - Activity context"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"customerId")," -  domain customer id"),Object(o.b)("p",null,"This method will be use for both Domain customer user and staff user."),Object(o.b)("h2",{id:"delete-session-of-user"},"Delete session of user"),Object(o.b)("p",null,"Client can delete session of diyalog sdk for any user."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"boolean isDelted = DiyalogEngine.diyalogInstance().deleteSessionOfUser(customerId); \n")),Object(o.b)("h2",{id:"get-total-unread-count-into-main-application"},"Get total unread count into main application."),Object(o.b)("p",null,"Client can get total no of unread message count into main application, so they can set unread badge count into main application. Client need to subscribe unread count event as below:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"}," DiyalogEngine.diyalogInstance().subscribeToTotalUnreadCountEvent(new ValueChangedListener<Integer>() {\n                    @Override\n                    public void onChanged(Integer val, Value<Integer> valueModel) {\n                        unreadCount.setText(String.valueOf(val));  // unreadCount is textview for display unread message count.\n                    }\n                });\n\n")),Object(o.b)("h3",{id:"tokenauthresponse"},"TokenAuthResponse"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"public interface TokenAuthResponse{\n        void success();\n        void failure(TokenAuthError tokenAuthError);\n    }\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"result :")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Parameter Name"),Object(o.b)("th",{parentName:"tr",align:null},"Type"),Object(o.b)("th",{parentName:"tr",align:null},"Description"),Object(o.b)("th",{parentName:"tr",align:null},"Values"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"success"),Object(o.b)("td",{parentName:"tr",align:null},"Boolean"),Object(o.b)("td",{parentName:"tr",align:null},"It returns activation success or nor."),Object(o.b)("td",{parentName:"tr",align:null},"true : Success false: failed")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"error"),Object(o.b)("td",{parentName:"tr",align:null},"TokenAuthError"),Object(o.b)("td",{parentName:"tr",align:null},"Failure detail if activation is failed."),Object(o.b)("td",{parentName:"tr",align:null},"Instance of ",Object(o.b)("a",{parentName:"td",href:"android_tokenBaseAuth#tokenautherror"},"TokenAuthError"))))),Object(o.b)("h3",{id:"tokenautherror"},"TokenAuthError"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"public class TokenAuthError {\n    public String errorCode;\n    public String errorMsg;\n\n    public String getErrorCode() {\n        return errorCode;\n    }\n\n    public void setErrorCode(String errorCode) {\n        this.errorCode = errorCode;\n    }\n\n    public String getErrorMsg() {\n        return errorMsg;\n    }\n\n    public void setErrorMsg(String errorMsg) {\n        this.errorMsg = errorMsg;\n    }\n}\n")),Object(o.b)("p",null,"In cases where activation fails, the following errorCode and errorMsg values \u200b\u200bare returned."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"errorCode"),Object(o.b)("th",{parentName:"tr",align:null},"errorMsg (English)"),Object(o.b)("th",{parentName:"tr",align:null},"errorMsg (Turkish)"),Object(o.b)("th",{parentName:"tr",align:null},"Meaning"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPINP_DVCID"),Object(o.b)("td",{parentName:"tr",align:null},"You must need to pass deviceId."),Object(o.b)("td",{parentName:"tr",align:null},"deviceId parametresi dolu olmal\u0131d\u0131r."),Object(o.b)("td",{parentName:"tr",align:null},"You did not provide the deviceId parameter to the method correctly.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPINP_CSTID"),Object(o.b)("td",{parentName:"tr",align:null},"You must need to pass customer Id."),Object(o.b)("td",{parentName:"tr",align:null},"customerId parametresi dolu olmal\u0131d\u0131r."),Object(o.b)("td",{parentName:"tr",align:null},"You did not provide the customerId parameter to the method correctly.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPINP_CSTNM"),Object(o.b)("td",{parentName:"tr",align:null},"You must need to pass customer name."),Object(o.b)("td",{parentName:"tr",align:null},"customerName parametresi dolu olmal\u0131d\u0131r."),Object(o.b)("td",{parentName:"tr",align:null},"You did not provide the customerName parameter to the method correctly.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPINP_TKN"),Object(o.b)("td",{parentName:"tr",align:null},"You must need to pass diyalog token."),Object(o.b)("td",{parentName:"tr",align:null},"diyalogToken parametresi dolu olmal\u0131d\u0131r."),Object(o.b)("td",{parentName:"tr",align:null},"You did not provide the diyalogToken parameter to the method correctly.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_INVLDNM"),Object(o.b)("td",{parentName:"tr",align:null},"Customer id is invalid."),Object(o.b)("td",{parentName:"tr",align:null},"M\xfc\u015fteri no hatal\u0131"),Object(o.b)("td",{parentName:"tr",align:null},"Customer Id is not found in the system.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_FRBDNCST"),Object(o.b)("td",{parentName:"tr",align:null},"Forbidden customer."),Object(o.b)("td",{parentName:"tr",align:null},"Yasakl\u0131 m\xfc\u015fteri."),Object(o.b)("td",{parentName:"tr",align:null},"Provided customer is forbidden to use Diyalog.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_TXHSHEXP"),Object(o.b)("td",{parentName:"tr",align:null},"transactionHash has expired."),Object(o.b)("td",{parentName:"tr",align:null},"transactionHash bilgisinin s\xfcresi ge\xe7mi\u015f."),Object(o.b)("td",{parentName:"tr",align:null},"This error occurs if the internal transaction hash information created in the Diyalog system has been used before. This error may occur when the same activation request is called more than once. It is not expected to occur.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_TKNNOTVLD"),Object(o.b)("td",{parentName:"tr",align:null},"dlgToken is not validated by auth server."),Object(o.b)("td",{parentName:"tr",align:null},"dlgToken otorizasyon sunucusu taraf\u0131ndan do\u011frulanmad\u0131."),Object(o.b)("td",{parentName:"tr",align:null},"This error occurs when your token is not verified by the token verification service.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_AUTHSRVERR"),Object(o.b)("td",{parentName:"tr",align:null},"Internal failure in Auth server."),Object(o.b)("td",{parentName:"tr",align:null},"Otorizasyon sunucusu internal hata."),Object(o.b)("td",{parentName:"tr",align:null},"This error indicates that an internal server error response returned from your token verification service.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_BADREQ"),Object(o.b)("td",{parentName:"tr",align:null},"The request rejected by auth server."),Object(o.b)("td",{parentName:"tr",align:null},"Otorizasyon sunucusu iste\u011fi kabul etmedi."),Object(o.b)("td",{parentName:"tr",align:null},"This error indicates that an bad request response was returned from your token verification service.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_TKNEXP"),Object(o.b)("td",{parentName:"tr",align:null},"dlgToken is expired."),Object(o.b)("td",{parentName:"tr",align:null},"dlgToken s\xfcresi dolmu\u015f"),Object(o.b)("td",{parentName:"tr",align:null},"This error is the error code returned by your token verification service when the token has expired.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_TKNINVLD"),Object(o.b)("td",{parentName:"tr",align:null},"dlgToken is invalid."),Object(o.b)("td",{parentName:"tr",align:null},"Ge\xe7ersiz dlgToken."),Object(o.b)("td",{parentName:"tr",align:null},"Token is not validated by your token verification service.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_DVCIDINVLD"),Object(o.b)("td",{parentName:"tr",align:null},"Invalid device id."),Object(o.b)("td",{parentName:"tr",align:null},"Ge\xe7ersiz cihaz id."),Object(o.b)("td",{parentName:"tr",align:null},"Device id is not found by your token verification service.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_SIDINVLD"),Object(o.b)("td",{parentName:"tr",align:null},"Invalid session id."),Object(o.b)("td",{parentName:"tr",align:null},"Ge\xe7ersiz session id."),Object(o.b)("td",{parentName:"tr",align:null},"Session Id is not found by your token verification service.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_AUTHSRVINACC"),Object(o.b)("td",{parentName:"tr",align:null},"Token authorisation server is not accessible."),Object(o.b)("td",{parentName:"tr",align:null},"Token otorizasyon sunucusuna eri\u015fim yok."),Object(o.b)("td",{parentName:"tr",align:null},"Your token verification service is not responding.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_INTERR"),Object(o.b)("td",{parentName:"tr",align:null},"message in RpcException"),Object(o.b)("td",{parentName:"tr",align:null},"message in RpcException"),Object(o.b)("td",{parentName:"tr",align:null},"This is rpc exception of the the Diyalog Server.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPINP_SESID"),Object(o.b)("td",{parentName:"tr",align:null},"You must need to pass session Id."),Object(o.b)("td",{parentName:"tr",align:null},"Oturum kimli\u011fini ge\xe7meniz gerekiyor."),Object(o.b)("td",{parentName:"tr",align:null},"You did not provide the sessionId parameter to the method correctly.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPINP_USRID"),Object(o.b)("td",{parentName:"tr",align:null},"You must need to pass user Id."),Object(o.b)("td",{parentName:"tr",align:null},"Kullan\u0131c\u0131 kimli\u011fini ge\xe7meniz gerekiyor."),Object(o.b)("td",{parentName:"tr",align:null},"You did not provide the userId parameter to the method correctly.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPINP_USRNM"),Object(o.b)("td",{parentName:"tr",align:null},"You must need to pass user name."),Object(o.b)("td",{parentName:"tr",align:null},"Kullan\u0131c\u0131 ad\u0131n\u0131 ge\xe7meniz gerekiyor."),Object(o.b)("td",{parentName:"tr",align:null},"You did not provide the userName parameter to the method correctly.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"DLGEXCPSRV_CONNERR"),Object(o.b)("td",{parentName:"tr",align:null},"Unable to connect."),Object(o.b)("td",{parentName:"tr",align:null},"Unable to connect. Please check that you are connected to the Internet."),Object(o.b)("td",{parentName:"tr",align:null},"This error occurs when Diyalog SDK is not connected to the Diyalog server due to network or endpoint configuration error.")))))}b.isMDXComponent=!0},162:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return p}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),b=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=b(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=b(n),m=r,p=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?a.a.createElement(p,i(i({ref:t},c),{},{components:n})):a.a.createElement(p,i({ref:t},c))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},198:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/mobileAppAuth-1c7cf240e88107cc60ca08f9f87edbb1.png"}}]);