(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{193:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return c}));var a=n(1),r=n(9),b=(n(198),n(197)),s={id:"webhook_ingilizce",title:"Webhook_ingilizce",sidebar_label:"Webhooks_ingilizce"},l={id:"webhook_ingilizce",title:"Webhook_ingilizce",description:"Dlg Messaging Platform can feed many events and situations related to your bot to webhook that you create on your own servers. In this way, you can get the status of all messages you send to your users through your bot and the responses your users have written to these messages and you can take different actions according to these events. The platform will forward these events and conditions to your webhook by making a POST request.",source:"@site/../docs/webhook_ingilizce.md",permalink:"/docs/webhook_ingilizce",sidebar_label:"Webhooks_ingilizce"},i=[{value:"How to Configure WebHook?",id:"how-to-configure-webhook",children:[]},{value:"Webhook Events",id:"webhook-events",children:[]},{value:"Event Format",id:"event-format",children:[{value:"entry",id:"entry",children:[]},{value:"messaging",id:"messaging",children:[]},{value:"sender",id:"sender",children:[]},{value:"recipient",id:"recipient",children:[]},{value:"Event Data",id:"event-data",children:[]}]},{value:"Some Sample Event Requests",id:"some-sample-event-requests",children:[]}],o={rightToc:i};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"Dlg Messaging Platform can feed many events and situations related to your bot to webhook that you create on your own servers. In this way, you can get the status of all messages you send to your users through your bot and the responses your users have written to these messages and you can take different actions according to these events. The platform will forward these events and conditions to your webhook by making a POST request."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"#how-to-configure-webHook"}),"How to Configure WebHook?")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"#webhook-events"}),"Webhook Events")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"#event-format"}),"Event Format"))),Object(b.b)("h2",{id:"how-to-configure-webhook"},"How to Configure WebHook?"),Object(b.b)("p",null,"You can only configure your bot by entering the following configuration parameters in the server.conf file of the dialog-server application."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'modules {\n    webbots {\n        info : [\n            {\n                botUserName : "your_bot_username",\n                webhook : {\n                    id : "id_of_your_webhook",\n                    url : "http://my_sample_webhook_url.com/",\n                    app_secret : "ffeceefiaae0aec8naich2queid1thoohi3pohSah7ohgaedaengiethah1ahthuumee12affcqq12",\n                    verify_token : "",\n                    subscribed_webhook_events : ["MessageEchoes",MessageDeliveries","MessageReads","Messages"]\n                }\n            },\n            ...\n        ]\n    }\n}\n')),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Configuration"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"botUserName"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The username of your Webbot. This should be the username information entered by admin when creating the bot.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"id"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This information is passed back to your webhook. In this way, if you have more than one webbot in the system and all meet the same webhook with this id you can distinguish. If you wish, you can provide a single webhook id for all your webbots. It all depends on the webhook you develop.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"url"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"URL address of your Webhook. The Dlg Platform will send requests to this url.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"app_secret"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'Used to validate requests from the DLG platform. With the app secret value that you specify, Dlg Platform creates the SHA1 HMAC of each message it sends to you and adds this value as "X-Signature" to the header of the request. You can verify incoming requests by checking the HMAC.')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"verify_token"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Using this information, your webhook will validate the Dlg Platform, but its development has not yet completed.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"subscribed_webhook_events"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'The Dlg Platform only transmits events that you subscribe to. You can define these events to the system with this parameter. You can enter at least one or all of the values of "MessageDeliveries", "MessageReads", "MessageEchoes" as an array, and subscribe to events.')))),Object(b.b)("h2",{id:"webhook-events"},"Webhook Events"),Object(b.b)("p",null,"Below are the types of events you can get from the Dlg Platform. Different and new events will be added later.\nAll of the events or subscribed events will be forward to your webhook by the platform."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Webhook Event"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"MessageEchoes"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"When you subscribe to this event, you can receive information that messages are sent to the recipient")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"MessageDeliveries"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"If you subscribe to this event, you can receive the message ids information that has been strictly received by the recipients via your webbot.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"MessageReads"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"If you subscribe to this event, you can receive the message ids information that has been read by the recipients via your webbot.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Messages"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"When users write to you, they are delivered to your webhook via your webhook. To receive these messages, you must subscribe to this event.")))),Object(b.b)("h2",{id:"event-format"},"Event Format"),Object(b.b)("p",null,"All webhook events are delivered to your webhook in the following format.\nIn this format, your webhook id information, sender bot id, receiver id number, customer number, event forwarding time are included in each event type. The content of the event varies by event type.\nIn another matter, the DLG platform collects a maximum of 10 events and transmits them at once, instead of sending each event to your system one by one. Of course, if 10 events have not accumulated within 5 seconds, it will forward the events that have occurred so far to your webhook.\nAll events are sent in the ",Object(b.b)("strong",{parentName:"p"}," entry ")," array object. "),Object(b.b)("p",null,"Here is an example event format."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n  "object": "dialog",\n  "entry": [\n    {\n      "id": "OTP",\n      "time": 1560172933001,\n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },              \n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "timestamp": 1560172926374,\n\n          ...              \n        }\n      ]\n    }\n  ]\n}\n')),Object(b.b)("p",null,"The meaning of the parameters of the above json object is as follows."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"object"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'By default, this field will return to you as "dialog".')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"entry"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Array<",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#entry"}),"entry"),">"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This field is the array where events are passed. One or more event objects will be sent to you. You can receive at least one and up to 10 events from each entry.")))),Object(b.b)("h3",{id:"entry"},"entry"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"id"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The ID information you gave during the configuration for your Webbot is sent back to you through this field.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"time"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The sent time of the event to your webhook by the Dlg Platform (epoch milliseconds)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"messaging"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Array<",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#messaging"}),"messaging"),">"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An array containing each event information. For future reference, this is designed as an array, but will only be passed to you with one object. Therefore, you can take the first element and use it.")))),Object(b.b)("h3",{id:"messaging"},"messaging"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"sender"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"<",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#sender"}),"sender"),">"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Webbot's information")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"recipient"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"<",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#recipient"}),"recipient"),">"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Recipient's information")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"timestamp"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Event time (epoch miliseconds)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Event Datas\u0131"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"#event-data"}),"Event Data")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The event content is different for each event.")))),Object(b.b)("h3",{id:"sender"},"sender"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"id"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"It is the unique id information of Webbot on the Dlg platform.")))),Object(b.b)("h3",{id:"recipient"},"recipient"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"appCustomerId"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The customer number of the user to whom the message was delivered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"id"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The unique id information of the user on the DLG platform to which the message is delivered.")))),Object(b.b)("h3",{id:"event-data"},"Event Data"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"MessageEchoes")),Object(b.b)("p",null,"Message Echo event is the event that occurs when the message is sent to the user via the bot.\nThis event indicates to the user that the message was sent. This does not mean that the event has been delivered to the user."),Object(b.b)("p",null,"The content of the sample MessageEcho is as follows."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'  "messageEcho": {\n    "app_id": 1614379680,\n    "is_echo": true,\n    "mid": "messageId-92"\n  }\n')),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"app_id"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"It is the unique id information of Webbot on the Dlg platform.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"is_echo"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Default returns true.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"mid"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"id of the message")))),Object(b.b)("p",null,"Below is an example entry for the MessageEcho event."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n  "object": "dialog",\n  "entry": [\n    {\n      "id": "OTP",\n      "time": 1560172933001,\n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },              \n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "timestamp": 1560172926374,\n          \n          "messageEcho": {\n            "app_id": 1614379680,\n            "is_echo": true,\n            "mid": "messageId-92"\n          }\n        }\n      ]\n    }\n  ]\n}\n')),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"MessageDeliveries")),Object(b.b)("p",null,"The Message Deliveries event is the event that occurs when message or messages are delivered to recipient via the bot.\nWhen this event is forwarded to your webhook, all messages with IDs in the event have been delivered to the user."),Object(b.b)("p",null,"Sample delivery content is as follows."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'  "delivery": {\n    "mids": [\n      "messageId-92"\n    ],\n    "watermark": 1560195968593\n  }\n  \n')),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"mids"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Array","[String]"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An array containing the message ids of messages forwarded to the user. All message ids in this array are delivered to the user.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"watermark"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The time of the delivery event (epoch milliseconds). All messages before this time in this parameter have been delivered.")))),Object(b.b)("p",null,"Below is an example entry for the MessageDeliveries event."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n   "object": "dialog",\n   "entry": [\n    {\n      "id": "OTP",\n      "time": 1560195973608,\n\n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },\n          \n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "timestamp": 1560172926374,\n          \n          "delivery": {\n            "mids": [\n              "messageId-92",\n              "messageId-93"\n            ],\n            "watermark": 1560195968593\n          }\n        }\n      ]\n    }\n  ]\n}    \n  \n  \n')),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"MessageReads")),Object(b.b)("p",null,"This event is forwarded to your webhook when the user reads the messages."),Object(b.b)("p",null,"Example read content is as follows."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),' "reads": {\n    "mids": [\n      "messageId-92"\n    ],\n    "watermark": 1560197145045\n  }\n')),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"mids"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Array","[String]"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An array containing the message ids that the user read. All message ids in this array have been read by the user.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"watermark"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The time of the read event (epoch milliseconds). All messages before this time in this parameter have been read.")))),Object(b.b)("p",null,"Below is an example entry for the MessageReads event.    "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n  "object": "dialog",\n  "entry": [\n    {\n      "id": "OTP",\n      "time": 1560197150060,\n\n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },\n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n\n          "timestamp": 1560197145045,\n          \n          "reads": {\n            "mids": [\n              "messageId-92"\n            ],\n            "watermark": 1560197145045\n          }\n        }\n      ]\n    }\n  ]\n}  \n')),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Messages")),Object(b.b)("p",null,"When the user responds to your webbot, this event will send the user message to your webhook."),Object(b.b)("p",null,"Example message content is as follows."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'  "message": {\n    "mid": "messageId-92",\n    "text": "Hello"\n  }\n')),Object(b.b)("p",null,"If the user has pressed one of the buttons of a template message containing the button you sent, the sample message content will be as follows."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'  "message": {\n    "mid": "messageId-92",\n    "text": "[messageId-92]:Approve"\n  }\n')),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"mid"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The id of the last message delivered to the user. The user has replied to this message.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"text"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This is the content of the user's response. If the user has typed text to you, you will receive the text directly from the user. If the user has sent a message such as OTP (mobile confirmation code), generictemplate, buttontemplate or quickreply type to the user and pressed the buttons of this message, you will get a reply to the message as [","[messageId-92]",': Hello ". In this way, you can detect which message the user has pushed, and take the necessary actions for the relevant message id.')))),Object(b.b)("p",null,"Below is an example entry for the Messages event.    "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n  "object": "dialog",\n  "entry": [\n    {\n      "id": "OTP",\n      "time": 1560198179122,\n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },\n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "timestamp": 1560198174092,\n          \n          "message": {\n            "mid": "messageId-92",\n            "text": "Hello"\n          }\n        }\n      ]\n    }\n  ]\n}\n')),Object(b.b)("h2",{id:"some-sample-event-requests"},"Some Sample Event Requests"),Object(b.b)("ol",null,Object(b.b)("li",{parentName:"ol"},"When a message is forwarded to the user by the bot, the MessageEchoes and MessageDeliveries event are normally forwarded to the webhook as follows.")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n  "object": "dialog",\n  \n  "entry": [\n    {\n      "id": "OTP",\n      "time": 1560199033954,\n      \n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },\n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "timestamp": 1560199028642,\n          \n          "messageEcho": {\n            "app_id": 1614379680,\n            "is_echo": true,\n            "mid": "messageId-101"\n          }\n        }\n      ]\n    },\n    {\n      "id": "OTP",\n      "time": 1560199033954,\n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },\n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "timestamp": 1560199028982,\n          \n          "delivery": {\n            "mids": [\n              "messageId-101"\n            ],\n            "watermark": 1560199028982\n          }\n        }\n      ]\n    }\n  ]\n}\n')),Object(b.b)("ol",{start:2},Object(b.b)("li",{parentName:"ol"},"Another example is that the user can receive messages via webbot and read them instantly while the chat screen is open. In this case you will get an event content like the one below.")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n  "object": "dialog",\n  "entry": [\n    {\n      "id": "OTP",\n      "time": 1560199722035,\n      \n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },\n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "timestamp": 1560199716748,\n          \n          "messageEcho": {\n            "app_id": 1614379680,\n            "is_echo": true,\n            "mid": "messageId-102"\n          }\n        }\n      ]\n    },\n    {\n      "id": "OTP",\n      "time": 1560199722035,\n\n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },\n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "timestamp": 1560199717421,\n          \n          "delivery": {\n            "mids": [\n              "messageId-102"\n            ],\n            "watermark": 1560199717421\n          }\n        }\n      ]\n    },\n    {\n      "id": "OTP",\n      "time": 1560199722035,\n      \n      "messaging": [\n        {\n          "sender": {\n            "id": "1614379680"\n          },\n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "timestamp": 1560199717448,\n\n          "reads": {\n            "mids": [\n              "messageId-102"\n            ],\n            "watermark": 1560199717448\n          }\n        }\n      ]\n    }\n  ]\n} \n')),Object(b.b)("ol",{start:3},Object(b.b)("li",{parentName:"ol"},"You can send messages to multiple users at the same time. In the sample event request below, webbot sent a message to customer numbers 70021 and 70022 at approximately same times and a message was sent to customer 70021 but not yet to customer 70022.")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n  "object": "dialog",\n  "entry": [\n    {\n      "id": "OTP",\n      "time": 1560200490563,\n      \n      "messaging": [\n        {\n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "sender": {\n            "id": "1614379680"\n          },\n          "timestamp": 1560200485050,\n          \n          "messageEcho": {\n            "app_id": 1614379680,\n            "is_echo": true,\n            "mid": "messageId-103"\n          }\n        }\n      ]\n    },\n    {\n      "id": "OTP",\n      "time": 1560200490563,\n      \n      "messaging": [\n        {\n          "recipient": {\n            "appCustomerId": "70022",\n            "id": "1588406039"\n          },\n          "sender": {\n            "id": "1614379680"\n          },\n          "timestamp": 1560200488953,\n          \n          "messageEcho": {\n            "app_id": 1614379680,\n            "is_echo": true,\n            "mid": "messageId-101"\n          }\n        }\n      ]\n    },\n    {\n      "id": "OTP",\n      "time": 1560200490563,\n      "messaging": [\n        {\n          "recipient": {\n            "appCustomerId": "70021",\n            "id": "243540663"\n          },\n          "sender": {\n            "id": "1614379680"\n          },\n          "timestamp": 1560200485546,\n          "delivery": {\n            "mids": [\n              "messageId-103"\n            ],\n            "watermark": 1560200485546\n          }\n        }\n      ]\n    }\n  ]\n}\n')),Object(b.b)("ol",{start:4},Object(b.b)("li",{parentName:"ol"},Object(b.b)("p",{parentName:"li"},"Another example is to send messages to the user, but the user read the messages sent to him after a while. In this case, only the reading events will be as follows when the user reads the messages.\nAs it can be seen from the content below, the user has read the message id messageId-103, messageId-104 and messageId-105."),Object(b.b)("p",{parentName:"li"},' {\n"object": "dialog",\n"entry": [\n{\n"id": "OTP",\n"time": 1560201130747,'),Object(b.b)("pre",{parentName:"li"},Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),'   "messaging": [\n     {\n       "sender": {\n         "id": "1614379680"\n       },\n       "recipient": {\n         "appCustomerId": "70021",\n         "id": "243540663"\n       },\n       "timestamp": 1560201125731,\n       \n       "reads": {\n         "mids": [\n           "messageId-103",\n           "messageId-104",\n           "messageId-105"\n         ],\n         "watermark": 1560201125731\n       }\n     }\n   ]\n }\n')),Object(b.b)("p",{parentName:"li"},"   ]\n}"))))}c.isMDXComponent=!0}}]);